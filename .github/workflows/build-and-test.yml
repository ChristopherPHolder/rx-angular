name: rx-angular CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  NX_DISTRIBUTED_TASK_EXECUTION: true
  NX_VERBOSE_LOGGING: false

jobs:
  agents:
    runs-on: ubuntu-latest

    name: Agent 1
    timeout-minutes: 20

    strategy:
      matrix:
        agent: [1, 2, 3]

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup

      - name: Start Nx Agent ${{ matrix.agent }}
        run: yarn nx-cloud start-agent

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup

      - run: yarn nx-cloud start-ci-run

      - name: Run Affected lint
        run: yarn nx affected:lint --parallel --maxParallel=3

      - name: Run Affected test
        run: yarn nx affected:test --parallel --maxParallel=2

      - name: Run SSR e2e
        run: yarn nx run ssr-e2e:e2e --headless

      # don't run build in parallel, can cause dead locks
      - name: Run Affected build
        run: yarn nx affected:build --parallel=false

      - run: yarn nx-cloud stop-all-agents

  build-docs:
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master'

    needs: [build]

    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/setup

      - run: yarn nx-cloud start-ci-run

      - run: yarn nx run-many --projects state,template,cdk --target build-docs --parallel=false
      - run: yarn nx build demos --prod

      - run: yarn nx-cloud stop-all-agents

      - uses: EndBug/add-and-commit@v4
        with:
          add: 'docs/*'
          force: true
          author_name: Github Action
          message: 'chore(docs): GitHub pages generation'
          # Name of the branch to use, if different from the one that triggered the workflow
          # Default: the branch that triggered the workflow (from GITHUB_REF)
          ref: 'github-pages'
        env:
          # This is necessary in order to push a commit to the repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
